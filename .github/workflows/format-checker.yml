name: "Check code formatting"
on: 
  pull_request_target:
    types: [opened,synchronize]
  issue_comment:
    types: edited

jobs:
  code_formatter:
    if: github.event_name == 'pull_request_target'
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Fetch LLVM sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Checkout through merge base
        uses: rmacklin/fetch-through-merge-base@bfe4d03a86f9afa52bc1a70e9814fc92a07f7b75 # v0.3.0
        with:
          base_ref: ${{ github.event.pull_request.base.ref }}
          head_ref: ${{ github.event.pull_request.head.sha }}
          deepen_length: 500

      - name: Get changed files
        id: changed-files
        uses: step-security/changed-files@3dbe17c78367e7d60f00d78ae6781a35be47b4a1 # v45.0.1
        with:
          separator: ","
          skip_initial_fetch: true

      - name: "Listed files"
        env:
          LISTED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          echo "Formatting files:"
          echo "$LISTED_FILES"

      - name: Install clang-format
        uses: aminya/setup-cpp@v1
        with:
          clangformat: 17.0.1

      - name: Setup Python env
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: 'utils/git/requirements_formatting.txt'

      - name: Install python dependencies
        run: pip install -r utils/git/requirements_formatting.txt

      - name: Run code formatter
        id: formatter
        env:
          GITHUB_PR_NUMBER: ${{ github.event.pull_request.number }}
          START_REV: ${{ github.event.pull_request.base.sha }}
          END_REV: ${{ github.event.pull_request.head.sha }}
          CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
           python utils/git/code-format-helper.py \
            --token ${{ secrets.GITHUB_TOKEN }} \
            --issue-number $GITHUB_PR_NUMBER \
            --start-rev $START_REV \
            --end-rev $END_REV \
            --changed-files "$CHANGED_FILES"